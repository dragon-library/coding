<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on Library</title>
    <link>https://dragon-library.github.iodocs/library/tags/flask/</link>
    <description>Recent content in Flask on Library</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 May 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="https://dragon-library.github.iodocs/library/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flask 101 พัฒนาเว็บด้วยภาษาไพธอน(Flask Framework)</title>
      <link>https://dragon-library.github.iodocs/library/post/python/tutorials/flask-101/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dragon-library.github.iodocs/library/post/python/tutorials/flask-101/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;featured.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ได้ฤกษ์งามยามดีกันแล้วครับกับบทความของซีรี่ย์ Flask 101 ซึ่งจะเป็นการเน้นเขียนภาษาไพธอน โดยนำมาประยุกต์ใช้งานในด้าน Web Development ซึ่งจะหมายถึงการพัฒนาเว็บไซต์และเว็บแอปพลิเคชัน ซึ่งผมแนะนำว่าเพื่อน ๆ ควรจะมีพื้นฐานภาษาไพธอนมาบ้าง ไม่ต้องแอดว้านซ์หรืออะไรมากมาย เอาแค่ว่า รู้จักการประกาศตัวแปร ชนิดของข้อมูลต่าง ๆ แบบไหนเป็นสตริง(String) เป็นจำนวนเต็ม(Integer) เป็นทศนิยม(Floating Point) การประกาศฟังก์ชัน การเรียกใช้งานฟังก์ชัน การกำหนดเงื่อนไข if-else อะไรประมาณนี้ ก็จะทำให้เราสามารถเข้าใจโค้ดและบทความที่ผมกำลังจะเขียนในตอนนี้ได้ดียิ่งขึ้น&lt;/p&gt;

&lt;p&gt;อีกอย่างที่แนะนำคือควรจะมีพื้นฐานภาษา HTML(Hyper Text Markup Language)มาบ้างเช่นกันครับ เพราะ HTMLเป็นภาษาพื้นฐานของการสร้างเว็บเลย เอาไว้แสดงผลคอนเทนต์ เช่น ข้อความ รูปภาพ วิดิโอ ฯลฯ ซึ่งทุกคนที่จะศึกษาหรือทำเว็บนั้น HTML คือภาษาแรกที่ทุกควรควรรู้เลยครับ!! ถ้ายังไม่มีพื้นฐานตรงนี้ เข้าไปศึกษาได้ที่นี่เลยครับ  &lt;a href=&#34;https://www.w3schools.com/html/&#34; target=&#34;_blank&#34;&gt;w3school&lt;/a&gt;  ส่วนภาษาถัดไปหลังจากศึกษา HTML แล้ว ผมก็แนะนำให้ศึกษา CSS (Cascading Style Sheets) แนะนำ  &lt;a href=&#34;https://www.w3schools.com/css/&#34; target=&#34;_blank&#34;&gt;w3school&lt;/a&gt;  ซึ่งเป็นภาษาที่เอาไว้ตกแต่งหน้าเว็บพื้น ๆ ที่เราเขียนขึ้นมาจาก HTML ให้กลายเป็นหน้าเว็บไซต์ที่มีสีสันสวยงาม น่าสนใจ ซึ่งจริง ๆ แล้วเราก็สามารถศึกษา CSS ไปพร้อมกันกับ HTML ได้ครับ เพราะสองตัวนี้ใช้คู่กัน และเมื่อศึกษา HTML และ CSS จนมีพื้นฐานในระดันหนึ่งแล้ว จากนั้นผมก็แนะนำให้ต่อยอดไปศึกษาภาษา JavaScript ครับ เพราะ JavaScritp นั้นนอกจากจะใช้สร้าง UI Components สวยงามต่าง ๆ แล้วยังช่วยให้เว็บไซต์ของเรามีการปฏิสัมพันธ์ที่ดีกับผู้ใช้ด้วยครับ โดยอันดับแรกอย่าพึ่งศึกษาเฟรมเวิร์คหรือไลบรารี่ ให้ศึกษาโครงสร้าง ไวยากรณ์ และทำความเข้าใจกับ JavaScript ก่อน แนะนำ  &lt;a href=&#34;https://www.w3schools.com/js/&#34; target=&#34;_blank&#34;&gt;w3school&lt;/a&gt;  เหมือนเดิม โดยเพื่อน ๆ สามารถดูภาพประกอบด้านล่าง เพื่อความเข้าใจและเห็นภาพชัดเจนยิ่งขึ้นเกี่ยวกับภาษา 3 ทหารเสือฝั่ง Frontend&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/500/1*8iCAiWf_lQVeZ9NiqhFakg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Credit photo:  &lt;a href=&#34;https://me.me/i/html-css-js-mr-website-dev-human-d6d432644b47443c9632d8115cf6dcce&#34; target=&#34;_blank&#34;&gt;https://me.me/i/html-css-js-mr-website-dev-human-d6d432644b47443c9632d8115cf6dcce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เมื่อเข้าใจโครงสร้างของภาษาแล้ว จากนั้นก็ค่อยไปศึกษาเฟรมเวิร์คหรือไลบรารี่ ที่กำลังเป็นที่นิยมอยู่ในตอนนี้ก็จะมี 3 ตัวหลัก ๆ คือ Angular, React และ Vue โดยตัว  &lt;a href=&#34;https://angularjs.org/&#34; target=&#34;_blank&#34;&gt;Angular.js&lt;/a&gt; จะเป็นเฟรมเวิร์คที่มีขนาดใหญ่สุดในบรรดา 3 ตัวนี้ และมี Learnig Curve สูงกว่าใครเพื่อน ส่วนรองลงมาคือ  &lt;a href=&#34;https://reactjs.org/&#34; target=&#34;_blank&#34;&gt;React.js&lt;/a&gt;  ซึ่งจะเห็นว่าในปัจจุบันมีการพูดถึง React.js กันอย่างกว้างขวางและเป็นที่นิยมแทบจะเรียกได้ว่ามากที่สุดตอนนี้ในเหล่าองค์กรหรือบริษัทชั้นนำ ส่วนตัวสุดท้ายคือ  &lt;a href=&#34;https://vuejs.org/&#34; target=&#34;_blank&#34;&gt;Vue.js&lt;/a&gt;  ซึ่งตัวนี้จะเรียนรู้ได้ไวและง่ายสุด และเป็นที่นิยมสุด ๆ ไม่แพ้ React.js เช่นกันในตอนนี้ ส่วนเพื่อน ๆ อยากศึกษาตัวไหน ก็ไปค้นหาข้อมูลเพิ่มเติมเพื่อดูว่าตัวไหนเหมาะสมกับเรามากที่สุด แล้วก็เลือกศึกษาตัวนั้นครับ&lt;/p&gt;

&lt;p&gt;ปล.ในบทความนี้ยังไม่ได้มีการประยุกต์ JavaScript เข้ามาใช้อย่างจริงจัง จะมีเพียงแค่ HTML และ CSS ซึ่งก็ถือว่าเพียงพอแล้วในเบื้องต้น&lt;/p&gt;

&lt;p&gt;เกริ่นนำกันไปพอสมควร ผมขอกลับมาที่พระเอกของเราในวันนี้ก็คือ Flask ซึ่งผมจะใช้ Flask ในการทำงานด้าน Server Side หรือที่หลาย ๆ คนเรียก Backend นั่นเอง โดยถ้าอยากเข้าใจ Flask เพิ่มเติม ก็สามารถอ่านได้ที่บทความ พั&lt;a href=&#34;https://medium.com/@komphet289/%E0%B8%9E%E0%B8%B1%E0%B8%92%E0%B8%99%E0%B8%B2%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B9%81%E0%B8%AD%E0%B8%9B%E0%B8%9E%E0%B8%A5%E0%B8%B4%E0%B9%80%E0%B8%84%E0%B8%8A%E0%B8%B1%E0%B8%99%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2%E0%B8%A0%E0%B8%B2%E0%B8%A9%E0%B8%B2%E0%B9%84%E0%B8%9E%E0%B8%98%E0%B8%AD%E0%B8%99-flask-framework-a49a0c1aee18&#34; target=&#34;_blank&#34;&gt;ฒนาเว็บแอปพลิเคชันด้วยภาษาไพธอน (Flask Framework)&lt;/a&gt;  ซึ่งผมได้เขียนไว้ก่อนหน้านี้ หรือยิ่งไปกว่านั้นถ้าอยากรู้ประวัติคนที่สร้าง Flask ก็สามารถอ่านได้เพิ่มเติมจากบทความนี้  &lt;a href=&#34;https://medium.com/@komphet289/programming-inspiration-ep-1-armin-ronacher-70b7f76117ea&#34; target=&#34;_blank&#34;&gt;Programming Inspiration Ep.1 Armin Ronacher&lt;/a&gt;  ซึ่งถ้าเพื่อน ๆ อ่านเสร็จ ตอนนี้ก็คงจะเข้าใจ Flask ในระดับหนึ่งแล้ว เรามาเริ่มสร้างโปรเจคท์ไปพร้อม ๆ กันเลยครับ&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;โดยซีรี่ย์ Flask 101 จะเป็นการสอนตั้งแต่กระบวนการแรกจนถึงกระบวนการสุดท้ายนั่นก็คือการ Deploy โปรเจคท์ของเรา กล่าวเป็นนัย ๆ ว่า เมื่อสิ้นสุดซีรี่ย์นี้ เราจะมีเว็บเป็นของตัวเอง 1 เว็บครับ ส่วนคลาวด์ จะใช้ของเจ้าไหนนั้น เช่น Heroku, PythonAnywhere, etc. อันนี้ก็ต้องติดตามต่อไปครับ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;สร้างโปรเจคท์ โดยการเปิด Command Prompt ขึ้นมา ในบทความนี้ใช้ PowerShell ของ Windows10&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;สร้างโฟลเดอร์ของโปรเจคท์ขึ้นมา พิมพ์คำสั่ง (flaskweb คือชื่อของโปรเจคท์นี้)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;mkdir flaskweb
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ชี้ไปที่โฟลเดอร์ของโปรเจคท์&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;cd flaskweb&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;สร้าง Virtual Environment (fw คือชื่อของ Virtual Environment ของโปรเจคท์นี้)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;python -m venv fw
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;note: สำหรับ mac/linux ให้ใช้คำสั่ง&lt;code&gt;python3 -m venv env&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ทำการ Activate ตัว Virtual Environment&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;fw\scripts\activate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;หรือเพื่อรันบน PowerShell ของ VS Code ก็ใช้คำสั่งด้านล่างนี้เพิ่มเข้ามาคือ .ps1&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;fw\scripts\activate.ps1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;note 2:&lt;/strong&gt; สำหรับ mac/linux ให้ใช้คำสั่ง  &lt;em&gt;env/bin/activate&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;เป็นอันเสร็จสิ้นขั้นตอนการสร้างโฟลเดอร์โปรเจคท์และ Virtual Environment และจะสังเกตเห็นว่ามี (fw) ซึ่งเป็นชื่อของ Virtual Environment ของโปรเจคท์นี้&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/799/1*eS5170OSHw28dX8cESsMyw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;เสร็จสิ้นขั้นตอน การสร้างโฟลเดอร์โปรเจคท์และ Virtual Environment&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;เปิด Visual Studio Code ขึ้นมา (โปรเจคท์นี้ใช้ Visual Studio Code เป็นตัว IDE)&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;เลือก Open Folder เพื่อทำการเปิดโฟลเดอร์โปรเจคท์ เพื่ออิมพอร์ตเข้ามาเขียนใน VS Code โดยคลิ๊กเลือก Path ที่เก็บโปรเจคท์ที่ผมได้สร้างไว้ในตอนนแรก จากนั้นทำการคลิ๊กเลือกโฟลเดอร์&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1273/1*l_U5EuJEbSz6xCVC8wsFlw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ทำการอิมพอร์ตโปรเจคท์เข้ามา&lt;/p&gt;

&lt;p&gt;โฟลเดอร์โปรเจคท์พร้อม Virtual Environment Folder ถูกอิมพอร์ตเข้ามาใน VS Code พร้อมสำหรับเขียนโปรแกรมต่อไป&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1275/1*cUuZNg5X8EX3iiemIS1Qnw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;โฟลเดอร์ของโปรเจคท์ถูกอิมพอร์ตเข้ามาใน VS Code พร้อมสำหรับเขียนโปรแกรม&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;คลิ๊ก View → Command Palette…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1280/1*UQDBsdFiuD6nAfne1jx7dw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;เลือก Python: Select Interpreter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1277/1*sey6jtRK4gF2a8bU9XY0yw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;เลือก Path ที่จะใช้ในการรันโปรเจคท์ ซึ่งก็ได้สร้างไว้ก่อนหน้าสำหรับ Virtual Environment นั่นก็คือ fw คลิ๊กเลือกได้เลย&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1278/1*6sLOwnzaBGao__9CNAxkIg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;จากนั้นทำการคลิ๊ก Debug → Start Debugging อีกครั้ง&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1275/1*Ylmr4ALPbAytOEPMEjerjg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;เลือก Python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1273/1*lEq9WqMgQsqPb7SYT-hi8w.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;เลือก Flask&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1280/1*E5SVji_2jTwMhGWQE4MoCA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;จะปรากฏชื่อไฟล์ app.py ซึ่งเป็นชื่อ Default ของ Flask กด Enter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1286/1*e1uopG4RV15zxQV_WtC8sw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;เป็นอันเสร็จสิ้นขั้นตอนนี้&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1273/1*D2VF_9blIYTfRPaF9dQvVg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;เราสามารถรันโปรเจคท์ได้ใน PowerShell ของ VS Code ได้แล้ว และ Virtual Environment ถูกเซ็ตเรียบร้อย&lt;/p&gt;

&lt;p&gt;ตอนนี้ผมก็สามารถรันโปรเจคท์ได้ใน PowerShell ของ VS Code ได้แล้ว ไม่ต้องไปรันที่ Command Prompt ข้างนอก ตอนนี้โปรเจคท์ยังขาดอะไรครับ ? ใช่แล้วครับ ผมยังไม่ได้ติดตั้ง Flask ไปที่ขั้นตอนต่อไปได้เลย&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ทำการติดตั้ง Flask โดยการพิมพ์คำสั่ง&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;pip install flask
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1277/1*jzzIsZZsgRiAeFM6OhGvyA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ทำการ Install Flask เข้ามาในโปรเจคท์&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ตอนนี้การติดตั้ง Flask เสร็จสิ้นเรียบร้อยแล้ว เช็คดูว่าตอนนี้ในโปรเจคท์มีการติดตั้งแพ็คเกจอะไรบ้าง&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;pip freeze
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1274/1*MWY9izALxiIwi3Bi0uZYyA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;แพ็คเกจต่าง ๆ ที่ถูกติดตั้งเข้ามาในโปรเจคท์&lt;/p&gt;

&lt;p&gt;จะเห็นว่ามีแพ็คเกจตัวอื่น ๆ อย่างเช่น Click, Jinja2, Werkzeug, etc ซึ่งแพ็คเกจเหล่านี้จะอยู่ใน Flask จึงถูกติดตั้งเข้ามาอัตโนมัติพร้อมกันกับ Flask&lt;/p&gt;

&lt;p&gt;ตอนนี้ผมยังไม่มีไฟล์ที่จะไพธอนที่จะใช้สำหรับเขียน Flask ซึ่งไฟล์นี้เราจะเรียกว่า Main File ซึ่งจะใช้สำหรับเขียนและรัน Flask App ของเรานั่นเอง ทำการสร้างไฟล์นี้ขึ้นมาได้เลย&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;สร้างไฟล์ขึ้นมาโดยคลิ๊กที่สัญลักษณ์ไฟล์ตรงแถบด้านซ้ายของ Workspace โดยใช้ชื่อว่า app.py กด Enter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1274/1*7361J_904yYEi8nyvscXvA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ทำการเขียนโค้ดดังนี้&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from flask import Flaskapp = Flask(__name__)@app.route(&#39;/&#39;)
def home(): 
	return &amp;quot;Hello My First Flask Project&amp;quot;
	if __name__ == &#39;__main__&#39;: 
		app.run(debug=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;อธ-บายโค-ด&#34;&gt;อธิบายโค้ด&lt;/h1&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;from-flask-import-flask&#34;&gt;from flask import Flask&lt;/h2&gt;

&lt;p&gt;บรรทัดแรกจะเป็นการอิมพอร์ต Flask จากโมดูล flask เพื่อสร้าง Flask เว็บเซิร์ฟเวอร์ของ Flask App จากโมดูล Flask&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from flask import Flask

## app = Flask(__name__)

คำสั่งนี้จะใช้บ่งบอกว่า ไฟล์นี้คือไฟล์ Main ที่จะเอาไว้รัน Flask App ของเรานั่นเอง

app = Flask(__name__)

## @app.route(‘\’)

## def home():

## return “Hello My First Flask Project”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ส่วนต่อมาจะเป็นการสร้าง URL เพื่อทำการชี้หรือ Map ไปที่ URLs ที่ต้องการ โดยในที่นี้ จะเป็นหน้า URL เริ่มต้น ซึ่งส่วนใหญ่หรือแทบจะทุกเว็บจะใช้ URL นี้เป็นหน้าโฮมเพจหรือที่อยู่ของเว็บไซต์&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;โดยตัว Default ที่ผมกำลังรันอยู่ในตอนนี้คือ localhost หรือไอพีแอดเดรส 127.0.0.1 พอร์ต Default ของ Flask คือ 5000 สุดท้ายเมื่อรันแล้วทำการเปิดหน้าเว็บบราวเซอร์จะพบ 127.0.0.1:5000&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ส่วนต่อมาก็คือการประกาศฟังก์ชัน โดยเป็นการประกาศเหมือนกันกับไพธอนโดยทั่วไปเลย ดังนั้นผมจึงย้ำว่า ทำไมก่อนเรียน Flask หรือไม่ว่าจะเป็นเฟรมเวิร์คใด ๆ เราควรเข้าใจโครงสร้างและไวยากรณ์ของภาษานั้นเสียก่อน โดยในฟังก์ชันนี้ผมใช้ชื่อว่า home จะหมายถึงฟังก์ชันนี้ผมจะเอาไว้ใช้สำหรับ Map ไปที่หน้า Home page ในบทความถัด ๆ ไปนั่นเอง&lt;/p&gt;

&lt;p&gt;หลังจากประกาศฟังก์ชันเรียบร้อย ผมก็จะทำการรีเทิร์นสตริงหรือข้อความธรรมดาปกติ ไปที่หน้า URL ที่ผมได้ออกแบบไว้ในนั้นคือ 127.0.0.1:5000 แต่ในข้างบนในฟังก์ชัน @app.route(‘\’) ใช้แค่เครื่องหมาย \ นั่นก็คือชี้ไปที่หน้าแรกหรือหน้า Default&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;@app.route(&#39;/&#39;) # URL Routedef home(): # Build a function called &amp;quot;home&amp;quot; return &amp;quot;Hello My First Flask Project&amp;quot; # Return strings to a desired url

## if __name__ == “__main__”’:

## app.run(debug=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ส่วนสุดท้ายจะเป็นการรัน Flask และทำการเปิด Debug Mode เพื่อใช้สำหรับติดตาม Error ต่าง ๆ ได้&lt;/p&gt;

&lt;p&gt;ปล. เวลา Deploy ให้ปิด Debug Mode โดยใช้ debug=False&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;if __name__ == &#39;__main__&#39;: app.run(debug=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1280/1*_QTTMsS1WrqCvxnoAcdbDQ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;รูปร่างหน้าตาของ Final Code จะเป็นดังนี้ แล้วทำการรันทดสอบได้เลย&lt;/p&gt;

&lt;p&gt;3.4 ทำการรันโดยใช้คำสั่ง flask run หรือไม่ก็เป็นการรันไฟล์ไพธอนแบบปกตินั่นก็คือ python app.py หรือ py app.py ซึ่งผมใช้อันหลังสุดเพราะสั้นและคุ้นเคยกับอันนี้มากกว่า&lt;/p&gt;

&lt;p&gt;3.5 จากนั้นกดปุ่ม ctrl ค้างที่คีย์บอร์ด แล้วใช้เมาส์ชี้ที่ลิ้งค์พร้อม ทำการคลิ๊ก&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1277/1*QmRI40TaU9Bs8qtj48r6CQ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Great!! ตอนนี้ผมก็ได้หน้าเว็บมาแล้วเรียบร้อย และนี่ก็คือหน้าเว็บจริง ๆ ครับ โดยในหน้าเว็บนี้แสดงผลคำว่า “Hello My First Flask Project” ที่ผมได้เขียนฟังก์ชันจากนั้นทำการรีเทิร์น ข้อความนี้ออกมาที่ URL ที่เป็นหน้า Default คือหน้าเริ่มต้นของเว็บ ซึ่งปกติเราจะใช้หน้านี้เป็นหน้าโฮมเพจ ซึ่งรายละเอียดจะพูดถึงในบทความถัด ๆ ไป&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;และแน่นอนครับว่า ผมคงไม่ได้เขียนเพื่อแสดงผลคำสั่งนี้ในหน้าเว็บแล้วทำการ Deploy ขึ้นคลาวด์ เพราะยังไงก็ต้องมีการปรับแต่งหน้าเว็บ และยังมีหลายกระบวนการที่ยังไม่ได้ถูกอธิบาย เอาเป็นว่าตอนนี้ผมได้หน้าเว็บมาแล้ว 1 หน้า&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/max/1383/1*-Coa6-bSRQLwlZcpo4qe5A.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;และนี่ก็คือหน้าเว็บ&lt;/p&gt;

&lt;p&gt;ครับก็จบลงไปแล้วสำหรับ Ep.1 ซึ่งจะเป็นการสร้างโปรเจคท์ผ่านคอมมานด์ไลน์และการสร้าง Virtual Environment ให้กับโปรเจคท์ของเรา ซึ่งผมก็หวังว่าคงเป็นประโยชน์ให้กับเพื่อน ๆ ที่กำลังจะเริ่มต้นเขียน Flask แต่ไม่รู้จะเริ่มต้นยังไง หรือปวดหัวกับการสร้าง Environment ให้กับโปรเจคท์ของเรา ผมก็หวังว่าบทความนี้คงเป็นประโยชน์ไม่มากก็น้อย&lt;/p&gt;

&lt;p&gt;และสำหรับ Ep ถัดไป ซึ่งจะเป็นการสอนและอธิบายโครงสร้างของ Flask ว่าประกอบไปด้วยอะไรบ้าง ดีไซน์แพทเทิร์นเป็นยังไง ซึ่งเราจำเป็นต้องรู้พื้นฐานเหล่านี้ เมื่อมีพื้นฐานที่ดีแล้ว เราก็จะต่อยอดไปได้อีกมากมาย ตามที่ใจต้องการ&lt;/p&gt;

&lt;p&gt;ถ้าชื่นชอบบทความนี้ ก็อย่าลืมกด Clap คนละ Clap เพื่อเป็นกำลังใจในการสร้างสรรค์ผลงานด้วยนะครับ หรือจะแชร์ไปให้เพื่อน ๆ ก็จะขอบคุณมาก หรือมีข้อแนะนำ ติชมตรงไหน ก็คอมเมนต์ได้ที่ด้านล่างโพสต์ไว้ได้เลยครับ See ya next article.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reference : &lt;a href=&#34;https://medium.com/@stackpython/flask-101-%E0%B8%9E%E0%B8%B1%E0%B8%92%E0%B8%99%E0%B8%B2%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2%E0%B8%A0%E0%B8%B2%E0%B8%A9%E0%B8%B2%E0%B9%84%E0%B8%9E%E0%B8%98%E0%B8%AD%E0%B8%99-flask-framework-3cae1c0b45d9&#34; target=&#34;_blank&#34;&gt;Medium&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>
